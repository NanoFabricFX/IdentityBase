#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # RP1
    server {
        server_name identitybase.local;
        listen 80;
        listen [::]:80;

        location / {
            # Use docker resolver on location level to ignore unreachable host error
            resolver 127.0.0.11 valid=30s ipv6=off;

            # Resolve the host
            set $target identitybase-web;

            proxy_pass http://$target:5002;
            include proxy.conf;
        }
    }

    # IdentityBase
    server {
        server_name auth.identitybase.local;
        listen 80;
        listen [::]:80;

        location / {
            # Use docker resolver on location level to ignore unreachable host error
            resolver 127.0.0.11 valid=30s ipv6=off;

            # Resolve the host
            set $target identitybase;

            proxy_pass http://$target:5000;
            include proxy.conf;
        }
    }

    # Api1
    server {
        server_name api1.identitybase.local;
        listen 80;
        listen [::]:80;

        location / {
            # Use docker resolver on location level to ignore unreachable host error
            resolver 127.0.0.11 valid=30s ipv6=off;

            # Resolve the host
            set $target identitybase-api1;

            proxy_pass http://$target:5001;
            include proxy.conf;
        }
    }
}
